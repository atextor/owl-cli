<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2024 Andreas Textor
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>ret</artifactId>
        <groupId>cool.rdf</groupId>
        <version>DEV-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>ret-cli</artifactId>
    <name>RET Command Line Interface</name>

    <properties>
        <regular.jar>${project.artifactId}-${project.version}</regular.jar>
        <native.image.jar>${project.artifactId}-${project.version}-for-native</native.image.jar>
        <main.class>cool.rdf.ret.cli.Ret</main.class>
        <binary.name>ret</binary.name>
        <packaging.type>jar</packaging.type>
    </properties>

    <dependencies>
        <!-- Module dependencies -->
        <dependency>
            <groupId>cool.rdf</groupId>
            <artifactId>ret-core</artifactId>
        </dependency>
        <dependency>
            <groupId>cool.rdf</groupId>
            <artifactId>ret-diagram-owl</artifactId>
        </dependency>
        <dependency>
            <groupId>cool.rdf</groupId>
            <artifactId>ret-infer</artifactId>
        </dependency>
        <dependency>
            <groupId>cool.rdf</groupId>
            <artifactId>ret-turtle-formatter</artifactId>
        </dependency>
        <dependency>
            <groupId>cool.rdf</groupId>
            <artifactId>ret-write</artifactId>
        </dependency>

        <!-- General dependencies -->
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
        </dependency>

        <!-- Compile time only dependencies -->
        <dependency>
            <groupId>org.graalvm.nativeimage</groupId>
            <artifactId>svm</artifactId>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.github.classgraph</groupId>
            <artifactId>classgraph</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <annotationProcessorPaths combine.children="append">
                        <path>
                            <groupId>info.picocli</groupId>
                            <artifactId>picocli-codegen</artifactId>
                            <version>${picocli.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
                        <arg>--add-exports</arg>
                        <arg>java.desktop/sun.awt=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>java.desktop/sun.font=ALL-UNNAMED</arg>
                    </compilerArgs>
                    <forceJavacCompilerUse>true</forceJavacCompilerUse>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                    <skip>${maven.surefire.skip}</skip>
                    <includes>
                        <include>**/RetTest.java</include>
                    </includes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <systemPropertyVariables>
                                <executableJar>${project.build.directory}/${regular.jar}.jar</executableJar>
                                <binary>${project.build.directory}/${binary.name}</binary>
                                <packaging.type>${packaging.type}</packaging.type>
                            </systemPropertyVariables>
                            <forkCount>1</forkCount>
                            <reuseForks>true</reuseForks>
                            <includes>
                                <include>**/ExecutableJarTest.java</include>
                                <include>**/BinaryTest.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven-shade-plugin.version}</version>
                <executions>
                    <!-- Builds the .jar file that is passed to GraalVM native-image -->
                    <execution>
                        <id>shade-for-native-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <finalName>${native.image.jar}</finalName>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <skip>${maven.shade.skip}</skip>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <manifestEntries>
                                        <Main-Class>${main.class}</Main-Class>
                                    </manifestEntries>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            </transformers>
                            <artifactSet>
                                <excludes>
                                    <!-- GraalVM SDK classes & friends must not be used at runtime -->
                                    <exclude>org.graalvm.sdk:graal-sdk</exclude>
                                    <exclude>org.graalvm.nativeimage:svm</exclude>
                                    <exclude>org.graalvm.truffle:truffle-api</exclude>
                                    <exclude>org.graalvm.nativeimage:native-image-base</exclude>
                                    <exclude>org.graalvm.nativeimage:pointsto</exclude>
                                    <exclude>org.graalvm.nativeimage:objectfile</exclude>
                                    <exclude>org.graalvm.compiler:compiler</exclude>

                                    <!-- OWL API components that contain identical classes to the ones -->
                                    <!-- already given in owlapi-distribution -->
                                    <exclude>net.sourceforge.owlapi:owlapi-api</exclude>
                                    <exclude>net.sourceforge.owlapi:owlapi-apibinding</exclude>
                                    <exclude>net.sourceforge.owlapi:owlapi-compatibility</exclude>
                                    <exclude>net.sourceforge.owlapi:owlapi-impl</exclude>
                                    <exclude>net.sourceforge.owlapi:owlapi-parsers</exclude>
                                    <exclude>net.sourceforge.owlapi:owlapi-oboformat</exclude>
                                    <exclude>net.sourceforge.owlapi:owlapi-rio</exclude>
                                    <exclude>net.sourceforge.owlapi:owlapi-tools</exclude>
                                </excludes>
                            </artifactSet>
                            <filters>
                                <!-- Required to prevent overlapping resources -->
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>module-info.class</exclude>
                                        <exclude>META-INF/*</exclude>
                                        <exclude>META-INF/sisu/javax.inject.Named</exclude>
                                        <exclude>META-INF/plexus/components.xml</exclude>
                                        <exclude>META-INF.versions*/**</exclude>
                                        <exclude>META-INF/versions*/**</exclude>
                                        <exclude>META-INF/maven/**</exclude>
                                        <exclude>plugin.xml</exclude>
                                        <exclude>about.html</exclude>
                                    </excludes>
                                </filter>
                                <!-- Required to override the excludes above -->
                                <filter>
                                    <artifact>${project.groupId}:${project.artifactId}</artifact>
                                    <excludeDefaults>false</excludeDefaults>
                                    <includes>
                                        <include>**</include>
                                        <include>META-INF/**</include>
                                        <include>git.properties</include>
                                    </includes>
                                    <excludes>
                                        <!-- Explicitly exclude build-time-only code from jar -->
                                        <exclude>cool/rdf/ret/core/buildtime/**</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                    <!-- Builds the regular standalone executable .jar -->
                    <execution>
                        <id>default-shade</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <finalName>${regular.jar}</finalName>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <skip>${maven.shade.skip}</skip>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <manifestEntries>
                                        <Main-Class>${main.class}</Main-Class>
                                    </manifestEntries>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            </transformers>
                            <artifactSet>
                                <excludes>
                                    <!-- OWL API components that contain identical classes to the ones -->
                                    <!-- already given in owlapi-distribution -->
                                    <exclude>net.sourceforge.owlapi:owlapi-api</exclude>
                                    <exclude>net.sourceforge.owlapi:owlapi-apibinding</exclude>
                                    <exclude>net.sourceforge.owlapi:owlapi-compatibility</exclude>
                                    <exclude>net.sourceforge.owlapi:owlapi-impl</exclude>
                                    <exclude>net.sourceforge.owlapi:owlapi-parsers</exclude>
                                    <exclude>net.sourceforge.owlapi:owlapi-oboformat</exclude>
                                    <exclude>net.sourceforge.owlapi:owlapi-rio</exclude>
                                    <exclude>net.sourceforge.owlapi:owlapi-tools</exclude>
                                </excludes>
                            </artifactSet>
                            <filters>
                                <!-- Required to prevent overlapping resources -->
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>module-info.class</exclude>
                                        <exclude>META-INF/*</exclude>
                                        <exclude>META-INF/sisu/javax.inject.Named</exclude>
                                        <exclude>META-INF/plexus/components.xml</exclude>
                                        <exclude>META-INF.versions*/**</exclude>
                                        <exclude>META-INF/versions*/**</exclude>
                                        <exclude>META-INF/maven/**</exclude>
                                        <exclude>plugin.xml</exclude>
                                        <exclude>about.html</exclude>
                                    </excludes>
                                </filter>
                                <!-- Required to override the excludes above -->
                                <filter>
                                    <artifact>${project.groupId}:${project.artifactId}</artifact>
                                    <excludeDefaults>false</excludeDefaults>
                                    <includes>
                                        <include>**</include>
                                        <include>META-INF/**</include>
                                        <include>git.properties</include>
                                    </includes>
                                    <excludes>
                                        <!-- Explicitly exclude build-time-only code from jar -->
                                        <exclude>cool/rdf/ret/core/buildtime/**</exclude>
                                        <!-- Exclude the GraalVM setup code and substitution classes -->
                                        <exclude>cool/rdf/ret/cli/graal/**</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>native</id>
            <properties>
                <maven.surefire.skip>true</maven.surefire.skip>
                <maven.resources.skip>true</maven.resources.skip>
                <packaging.type>native</packaging.type>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <version>${native-maven-plugin.version}</version>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <id>build-native</id>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <phase>pre-integration-test</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <mainClass>${main.class}</mainClass>
                            <skipNativeBuild>${native.build.skip}</skipNativeBuild>
                            <skipNativeTests>true</skipNativeTests>
                            <buildArgs>
                                <arg>-H:Name=${project.build.directory}/${binary.name}</arg>
                                <arg>--verbose</arg>
                                <arg>--no-fallback</arg>
                                <arg>--report-unsupported-elements-at-runtime</arg>
                                <arg>-H:EnableURLProtocols=http,https</arg>
                                <arg>--enable-https</arg>
                                <arg>-H:-UseServiceLoaderFeature</arg>
                                <arg>-H:+AllowIncompleteClasspath</arg>
                                <arg>-H:+ReportExceptionStackTraces</arg>
                                <arg>-H:+PrintClassInitialization</arg>
                                <arg>-H:-DeadlockWatchdogExitOnTimeout</arg>
                                <arg>-H:DeadlockWatchdogInterval=0</arg>
                                <arg>--features=cool.rdf.ret.cli.graal.feature.RetFeature</arg>
                                <arg>-J-XX:MaxRAMPercentage=90.0</arg>
                                <arg>-J-XX:GCTimeRatio=19</arg>
                                <arg>-J--add-exports=java.desktop/sun.awt=ALL-UNNAMED</arg>
                                <arg>-J--add-exports=java.desktop/sun.font=ALL-UNNAMED</arg>
                                <arg>-J--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core.jni=ALL-UNNAMED</arg>
                            </buildArgs>
                            <quickBuild>true</quickBuild>
                            <classpath>
                                <param>${project.build.directory}/${native.image.jar}.jar</param>
                            </classpath>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
