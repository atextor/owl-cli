plugins {
    id 'java'
    id 'jacoco'
    id 'com.github.ben-manes.versions' version "0.28.0"
    id 'org.asciidoctor.jvm.convert' version "3.1.0" apply false
    id 'com.adarshr.test-logger' version '2.0.0'
}

allprojects {
    repositories {
        jcenter()
    }
}

subprojects {
    version = '0.1.0'
    task allDeps(type: DependencyReportTask) {}
}

apply plugin: 'jacoco'
apply plugin: 'java'

task jacocoRootReport(type: JacocoReport, group: 'Coverage reports') {
    description = 'Generates an aggregate report from all subprojects'
    classDirectories.from = [
        "${projectDir}/cli/build/classes/java/main",
        "${projectDir}/diagram/build/classes/java/main"
    ]
    sourceDirectories.from = [
        "${projectDir}/cli/src/main/java",
        "${projectDir}/diagram/src/main/java",
    ]

    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
    reports {
        html.enabled = true
        xml.enabled = true
        xml.destination(new File("${buildDir}/reports/jacoco/report.xml"))
        csv.enabled = false
    }
}

defaultTasks 'test', 'shadowJar'

def isNonStable = { String version ->
  return ['ALPHA', 'BETA', 'RC', 'M'].any { it -> version.toUpperCase().contains(it) }
}

dependencyUpdates {
  rejectVersionIf {
    isNonStable(it.candidate.version)
  }
}
